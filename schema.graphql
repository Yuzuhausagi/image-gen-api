"""Number of images to generate (between 1 and 4)"""
scalar ImageCount

enum ImageFormat {
  PNG
  JPEG
  WEBP
}

type ImageGenerationError {
  message: String!
  code: String!
}

input ImageGenerationInput {
  prompt: PromptString!
  format: ImageFormat! = PNG
  width: Int = 512
  height: Int = 512
  style: ImageStyle! = PHOTOREALISTIC

  """Number of images to generate"""
  numImages: ImageCount! = 1

  """Type of model to use for image generation"""
  modelType: ModelType! = STABLE_V2_1
  numInferenceSteps: Int = 50
}

type ImageGenerationResponse {
  success: Boolean!
  results: [ImageGenerationResult!]
  error: ImageGenerationError
}

type ImageGenerationResult {
  id: String!
  url: String!
  createdAt: String!
  prompt: String!
  format: ImageFormat!
  width: Int!
  height: Int!
  style: ImageStyle!
}

enum ImageStyle {
  PHOTOREALISTIC
  ARTISTIC
  CARTOON
  ABSTRACT
}

enum ModelType {
  STABLE_V1_4
  STABLE_V1_5
  STABLE_V2_1
  FLUX_1_DEV
  FLUX_1_SCHNELL
}

type Mutation {
  """Generate one or more images based on the provided prompt and options"""
  generateImages(input: ImageGenerationInput!): ImageGenerationResponse!
  message: String!
  code: String!
  prompt: PromptString!
  format: ImageFormat!
  width: Int
  height: Int
  style: ImageStyle!

  """Number of images to generate"""
  numImages: ImageCount!

  """Type of model to use for image generation"""
  modelType: ModelType!
  numInferenceSteps: Int
  success: Boolean!
  results: [ImageGenerationResult!]
  error: ImageGenerationError
  id: String!
  url: String!
  createdAt: String!
}

"""A string between 3 and 1000 characters for image generation prompts"""
scalar PromptString

type Query {
  """Check if the API is healthy"""
  health: String!
  users: [String!]!
}